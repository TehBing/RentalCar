CREATE OR REPLACE FUNCTION ListCustomerOrders(customerNumber IN NUMBER)
RETURN VARCHAR2 IS
    result VARCHAR2(4000);
BEGIN
    SELECT 
        TO_CHAR(customer.c_custkey) || ' ' || customer.c_name || ': ' ||
	CASE
	WHEN COUNT(orders.o_orderkey) > 0 then
      		 LISTAGG(orders.o_orderkey, ', ') WITHIN GROUP (ORDER BY orders.o_orderkey)
	ELSE
		' '
	END AS orderlist
    INTO result
    FROM customer
    LEFT JOIN orders ON customer.c_custkey = orders.o_custkey
    WHERE customer.c_custkey = customerNumber
    GROUP BY customer.c_custkey, customer.c_name;
    
    RETURN result;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN TO_CHAR(customerNumber) || ' does not exist';
    WHEN OTHERS THEN
        RETURN 'An error occurred';
END ListCustomerOrders;
/

////////////////////////////////// result

SQL> CREATE OR REPLACE FUNCTION ListCustomerOrders(customerNumber IN NUMBER)
  2  RETURN VARCHAR2 IS
  3  	 result VARCHAR2(4000);
  4  BEGIN
  5  	 SELECT
  6  	     TO_CHAR(customer.c_custkey) || ' ' || customer.c_name || ': ' ||
  7  	     CASE
  8  	     WHEN COUNT(orders.o_orderkey) > 0 then
  9  		      LISTAGG(orders.o_orderkey, ', ') WITHIN GROUP (ORDER BY orders.o_orderkey)
 10  	     ELSE
 11  		     ' '
 12  	     END AS orderlist
 13  	 INTO result
 14  	 FROM customer
 15  	 LEFT JOIN orders ON customer.c_custkey = orders.o_custkey
 16  	 WHERE customer.c_custkey = customerNumber
 17  	 GROUP BY customer.c_custkey, customer.c_name;
 18  
 19  	 RETURN result;
 20  EXCEPTION
 21  	 WHEN NO_DATA_FOUND THEN
 22  	     RETURN TO_CHAR(customerNumber) || ' does not exist';
 23  	 WHEN OTHERS THEN
 24  	     RETURN 'An error occurred';
 25  END ListCustomerOrders;
 26  /

Function created.

SQL> select ListCustomerOrders(44378) from dual;

LISTCUSTOMERORDERS(44378)
----------------------------------------------------------------------------------------------------
44378 Customer#000044378: 57510, 853729, 911782, 916705, 1155013, 1345312, 1431554, 1747653, 1799012

1 row selected.


//////////////////$$$
CREATE OR REPLACE TRIGGER CheckSuppBal
BEFORE INSERT OR UPDATE ON SUPPLIER
FOR EACH ROW 
BEGIN

	IF :NEW.s_acctbal <=0 THEN
		RAISE_APPLICATION_ERROR(-2000, 'Account balance must be more than 0');
	END IF;
END;
/


/////// result
SQL> CREATE OR REPLACE TRIGGER CheckSuppBal
  2  BEFORE INSERT OR UPDATE ON SUPPLIER
  3  FOR EACH ROW
  4  BEGIN
  5  
  6  	     IF :NEW.s_acctbal <=0 THEN
  7  		     RAISE_APPLICATION_ERROR(-2000, 'Account balance must be more than 0');
  8  	     END IF;
  9  END;
 10  /

Trigger created.

SQL> INSERT INTO SUPPLIER (s_suppkey, s_acctbal) VALUES (1,0) ;
INSERT INTO SUPPLIER (s_suppkey, s_acctbal) VALUES (1,0)
            *
ERROR at line 1:
ORA-21000: error number argument to raise_application_error of -2000 is out of range
ORA-06512: at "CSCI235.CHECKSUPPBAL", line 4
ORA-04088: error during execution of trigger 'CSCI235.CHECKSUPPBAL'
